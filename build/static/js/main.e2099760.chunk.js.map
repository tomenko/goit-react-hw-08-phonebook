{"version":3,"sources":["redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/contacts/contacts-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","routes.js","components/UserMenu/Navigation.js","image/icons-user-no-avatar.png","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["initialUserState","name","email","user","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","isLogedIn","combineReducers","getIsAuthenticated","state","auth","getUserEmail","getItems","contacts","items","getFilterValue","filter","getLoadingItems","loading","getFilteredContactList","createSelector","allContacts","regExp","RegExp","contact","test","axios","defaults","baseURL","headers","common","Authorization","signup","credentials","dispatch","a","registerRequest","post","response","data","message","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","createAction","fetchContactSuccess","addContactSuccess","deleteContactSuccess","item","id","changeFilter","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContacts","addContact","number","then","catch","deleteContact","contactID","delete","Navigation","className","exact","to","routes","activeClassName","mapDispatchToProps","onLogout","connect","avatar","noAvatar","src","alt","width","type","onClick","AuthNav","isAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","loginView","RegisterView","App","this","onGetCurrentUser","fallback","path","isLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","blacklist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2099760.chunk.js","sourcesContent":["  \r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  /* registerRequest, */\r\n  registerSuccess,\r\n  registerError,\r\n  /* loginRequest, */\r\n  loginSuccess,\r\n  loginError,\r\n  /* logoutRequest, */\r\n  logoutSuccess,\r\n  logoutError,\r\n  /* getCurrentUserRequest, */\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: (_, __) => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isLogedIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isLogedIn,\r\n  token,\r\n  error,\r\n});","export const getIsAuthenticated = state => !!state.auth.isLogedIn;\r\n\r\nexport const getUserEmail = state => state.auth.user.email;\r\n\r\nexport const getError = state => state.auth.user.error;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const getLoadingItems = state => state.contacts.loading;\r\n\r\nexport const getFilteredContactList = createSelector(\r\n  [getItems, getFilterValue],\r\n  (allContacts, filter) => {\r\n    const regExp = new RegExp(filter, 'gi');\r\n\r\n    if (filter) {\r\n    return allContacts.filter(contact => regExp.test(contact.name));\r\n    }\r\n    return allContacts;\r\n  },\r\n);\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,    \r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n/* axios.defaults.baseURL = 'http://localhost:3001'; */\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest);\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = contactID => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactID}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactID)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","export default {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  login: '/login',\r\n  register: '/register',\r\n};","import { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport './UserMenu.css'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li> <NavLink\r\n                exact to={routes.home}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                Home</NavLink>\r\n            </li>\r\n            \r\n            <li> <NavLink\r\n                to={routes.contacts}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                Contacts</NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n    );   \r\n}\r\n \r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/icons-user-no-avatar.6c53c0a1.png\";","import './UserMenu.css'\r\nimport React from 'react';\r\nimport { getUserEmail, logout } from '../../redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport noAvatar from '../../image/icons-user-no-avatar.png';\r\n\r\n\r\nconst UserMenu = ({ email, onLogout, avatar }) => (\r\n    <div className=\"UserMenu\">        \r\n        <img src={avatar} alt=\"\" width=\"30\" />   \r\n        <span>{email}</span>\r\n        <button type=\"button\" onClick={onLogout} className=\"btn\">Sign out</button>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  email: getUserEmail(state),\r\n  avatar: noAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport './UserMenu.css'\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li> <NavLink\r\n                to={routes.login}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                  <span >\r\n                    Login\r\n                  </span>\r\n                </NavLink>\r\n            </li>\r\n\r\n            <li> <NavLink\r\n                to={routes.register}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                  <span >\r\n                    Register\r\n                  </span>\r\n                </NavLink>\r\n            </li>   \r\n        </ul>\r\n    );   \r\n}\r\n \r\nexport default AuthNav;","import { connect } from 'react-redux';\r\n\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nimport './UserMenu.css';\r\n\r\n\r\n\r\n\r\nconst AppBar = ({isAuthenticated}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Navigation />\r\n            {isAuthenticated? <UserMenu />:<AuthNav />}\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n \r\nexport default connect(mapStateToProps)(AppBar);","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { lazy, Suspense, Component} from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport routes from './routes';\nimport { connect } from 'react-redux';\n\nimport AppBar from './components/UserMenu';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\n/* import { fetchContacts } from './redux/contacts/contacts-operations'; */\nimport { getItems, getLoadingItems } from './redux/contacts/contacts-selectors';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components//PublicRoute/PublicRoute';\n\nimport './app.css'\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home-view\" */)\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */)\n);\n\nconst loginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-view\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-view\" */)\n);\n\n\nclass App extends Component {\n    componentDidMount() {\n    this.props.onGetCurrentUser();\n    /* this.props.fetchItems(); */\n  }\n\n  render() { \n    return (\n      <div  className=\"app\">\n        <AppBar />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomeView} />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo=\"/contacts\"\n              component={loginView}\n            />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo=\"/\"\n              component={RegisterView}\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: getItems(state),\n  isLoading: getLoadingItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  /* fetchItems: () => dispatch(fetchContacts()), */\n  onGetCurrentUser: () => dispatch(getCurrentUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts';\r\nimport authReducer from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n  blacklist: ['filter'],\r\n};\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}